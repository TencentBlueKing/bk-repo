## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Add labels to all the deployed resources
##
commonLabels: {}

## Add annotations to all the deployed resources
##
commonAnnotations: {}

## Specifies whether RBAC resources should be created
##
rbac:
  create: true

## Specifies whether a ServiceAccount should be created
##
serviceAccount:
  create: true
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name:

# metrics采集配置
serviceMonitor:
  enabled: false

## bkDomainScheme配置
bkDomainScheme: http

## 是否强制跳转https配置
forceHttps: false

## 日志采集配置
bkLogConfig:
  enabled: false
  service:
    dataId: 1
  gatewayAccess:
    dataId: 1
  gatewayError:
    dataId: 1

## ingress配置
ingress:
  enabled: true
  tls: false
  tlsName: ""
  crt: ""
  key: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "20480m"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/use-http2: "false"

## nginx-ingress-controller 配置
## ref: https://github.com/bitnami/charts/tree/master/bitnami/nginx-ingress-controller
nginx-ingress-controller:
  ## 是否部署nginx-ingress-controller
  hostNetwork: false
  replicaCount: 1
  enabled: true
  defaultBackend:
    enabled: false

## mongodb charts配置
## ref: https://github.com/bitnami/charts/tree/master/bitnami/mongodb
mongodb:
  # 是否部署mongodb
  # 如果需要使用外部数据库，设置为false并配置externalMongodb
  enabled: true
  auth:
    enabled: true
    database: bkrepo
    username: bkrepo
    password: bkrepo
  persistence:
    subPath: mongodb
    size: 20Gi

## 如果mongodb.enabled为false，bkrepo将使用下面的参数连接外部mongodb
externalMongodb:
  ## mongodb 标准连接字符串
  uri: mongodb://bkrepo:bkrepo@localhost:27017/bkrepo

## 数据持久化配置, 当使用filesystem方式存储时需要配置
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  ## 是否开启数据持久化，false则使用emptyDir类型volume, pod结束后数据将被清空，无法持久化
  enabled: true
  accessMode: ReadWriteOnce
  size: 100Gi

  ## 如果不定义或设置为null, 将使用默认的storageClass(minikube上是hostPath, AWS上的gp2, GKE上是standard)
  ## 如果设置为"-", 则禁用动态卷供应
  ## 如果设置为其它值，则storageClassName: <storageClass>
  # storageClass: "-"

  ## 绑定k8s集群中已存在的pvc
  ## Requires persistence.enabled: true
  # existingClaim: my-persistent-volume-claim

  ## 如果开启持久化，并且没有任何上述配置，将使用动态卷供应方式提供存储，使用storageClass定义的存储类。
  ## 在删除该声明后，这个卷也会被销毁(用于单节点环境，生产环境不推荐)。
  # ref: https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/

## commit-edge组网模式相关配置
cluster:
  ## COMMIT_EDGE or STANDALONE
  architecture:
  ## center or edge
  role:
  center:
    ## center节点相关配置
    name: center
    url: https://center.bkrepo.example.com
    appId: bkrepo
    accessKey:
    secretKey:
  ## self集群相关配置
  self:
    name: edge

init:
  ## curl镜像地址
  curl:
    image:
      registry: mirrors.tencent.com
      repository: curlimages/curl
      tag: 7.72.0
      pullPolicy: IfNotPresent
      pullSecrets: [ ]
  mongodb:
    enabled: true
    image:
      registry: registry.hub.docker.com
      repository: bkrepo/bkrepo-init
      tag: 1.1.0
      pullPolicy: IfNotPresent
      pullSecrets: []
  # 初始化bk-ci nav
  entrance:
    enabled: false
    bkCiProjectInnerUrl:
  ## bcs repo配置
  bcs:
    enabled: false
    publicImageUrl: https://hub.bktencent.com/blueking
    publicChartUrl: https://hub.bktencent.com/chartrepo/blueking
## bkrepo公共配置
common:
  # bkrepo镜像仓库全局配置, 具有最高优先级
  imageRegistry: ""
  # bkrepo镜像tag全局配置, 具有最高优先级
  imageTag: ""
  ## 部署区域，可不填
  region:
  ## jvm启动选项, 如-Xms1024M -Xmx1024M
  jvmOption: ""
  ## SpringBoot active profile
  springProfile: dev
  ## 初始用户名
  username: admin
  ## 初始用户密码
  password: password
  ## pod volume 挂载路径
  mountPath: /data/storage
  config:
    ## bkrepo存储配置
    storage:
      ## bkrepo receive默认配置
      receive:
        fileSizeThreshold: 5MB
      ## 指定存储类型，支持filesystem/cos/s3/hdfs/innercos
      type: filesystem
      ## filesystem配置，使用文件系统
      filesystem:
        path: /data/storage/store
      ## innercos，使用对象存储终端存储文件
      innercos:
        ## cos secretId
        secretId: xxx
        ## cos secretKey
        secretKey: xxx
        ## cos region
        region: gzc
        ## cos bucket ,比如test-00001
        bucket: test-00001
        ## lb modeId
        modId: 000001
        ## lb cmdId
        cmdId: 0001
        cache:
          enabled: true
          path: /data/storage/cached
          expireDays: 14
          loadCacheFirst: true
        upload:
          location: /data/storage/temp
      # 是否启用nfs挂载
      nfs:
        enabled: false
        path: /
        server:

      ## 腾讯云cos存储配置
      #cos:
      ## 标准s3对象存储
      #s3:
      ## hdfs存储配置
      #hdfs:

## 网关配置
gateway:
  ## bkrepo 地址
  host: bkrepo.example.com
  ## bkrepo static 文件地址
  staticHost: static.bkrepo.example.com
  ## bkrepo docker仓库地址
  dockerHost: docker.bkrepo.example.com
  ## bkrepo helm仓库地址
  helmHost: helm.bkrepo.example.com
  ## dns服务器地址，用于配置nginx resolver。local=on为openrestry语法，取本机/etc/resolv.conf配置
  dnsServer: local=on
  ## 网关访问微服务认证信息 ,authorization配置即将被废弃，建议使用accessKey/secretKey配置
  authorization: "Platform MThiNjFjOWMtOTAxYi00ZWEzLTg5YzMtMWY3NGJlOTQ0YjY2OlVzOFpHRFhQcWs4NmN3TXVrWUFCUXFDWkxBa00zSw=="
  ## authorization配置独立出accessKey
  accessKey: ""
  ## authorization配置独立出secretKey
  secretKey: ""
  ## 部署模式，standalone: 独立模式，ci: 与ci搭配模式 , saas模式: 蓝鲸saas部署模式
  deployMode: standalone
  ## 网关认证模式，ticket, 校验bk_ticket token ，校验bk_token
  authMode: token
  ## bkci 域名
  bkciHost:
  ## bkci 端口
  bkciPort:
  ## ci模式必填，蓝鲸paas域名
  bkPaasUrl: paas.example.com
  ## ci模式必填，登录地址
  bkLoginUrl: http://paas.example.com/login/
  ## ci模式必填，ssm ip
  ssmIP0:
  ## ci模式必填，ssm host
  ssmHost:
  ## ci模式必填，ssm port
  ssmPort:
  ## ci模式必填，ssm token url
  ssmTokenUrl:
  ## ci模式必填，ssm env
  ssmEnv:
  ## 蓝鲸apigw地址
  bkApigwUrl:
  ## ci模式必填，app code
  appCode:
  ## ci模式必填，app token
  appToken:
  ## 不支持ipv6网络栈时需要配置
  extIP:
  ## bkrepo gateway service配置
  service:
    type: ClusterIP
    ## 服务类型为`ClusterIP`时端口设置
    port: 80
    ## 服务类型为`NodePort`时端口设置
    nodePort: 30025
    ## 服务类型为docker服务`NodePort`时暴露的ip
    nodeIP: 127.0.0.1
    ## 服务类型为docker服务`NodePort`时端口设置
    dockerNodePort: 30026
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-gateway
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## replication fdtp服务配置
replicationUDP:
  enabled: true
  ## bkrepo replication-udp service配置
  service:
    type: LoadBalancer
    ## 服务类型为`ClusterIP`时端口设置
    port: 25903
    ## 服务类型为`NodePort`/`LoadBalancer`时端口设置
    nodePort: 30027

## 仓库服务配置
repository:
  config:
    # 节点被删除后多久清理数据
    deletedNodeReserveDays: 15
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-repository
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## 认证服务配置
auth:
  config:
    allowDefaultPwd: true
    ## 指定realm类型，支持local/devops
    realm: local
    ## realm 指定为devops配置
    devops:
      # bkci accountId in bkrepo
      appId: bkdevops
      # bkci appId set
      appIdSet: bkdevops,bkrepo,codecc,bcs
      # bcs appId
      bcsAppId: bcs
      # bkrepo appId
      bkrepoAppId: bkrepo
      # bkci auth server url
      ciAuthServer:
      # bkci auth token
      ciAuthToken:
      # 开启reporter模式
      enableSuperAdmin: true
  ## bcs account配置
  bcs:
    accessKey: ""
    secretKey: ""
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-auth
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## generic服务配置
generic:
  enabled: true
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-generic
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## fs-server服务配置
fsserver:
  enabled: true
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-fs-server
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## replication服务配置
replication:
  enabled: true
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-replication
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## opdata服务配置
opdata:
  enabled: true
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-opdata
    tag: 1.1.3
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## docker registry服务配置
docker:
  enabled: false
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-oci
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## npm registry服务配置
npm:
  enabled: false
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-npm
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## pypi registry服务配置
pypi:
  enabled: false
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-pypi
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

## helm registry服务配置
helm:
  enabled: false
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-helm
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""
## job registry服务配置
job:
  enabled: true
  config: {}
  ## Kubernetes 通用配置
  image:
    registry: registry.hub.docker.com
    repository: bkrepo/bkrepo-job
    tag: 1.1.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  replicaCount: 1
  hostAliases: []
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: ""
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""
## plugin registry服务配置
bkstore:
  enabled: false
  image:
    registry: mirrors.tencent.com
    repository: bkrepo/bkrepo-plugin-bkstore
    tag: 1.0.0
    pullPolicy: IfNotPresent
    pullSecrets: []
gitci:
  enabled: false
  image:
    registry: mirrors.tencent.com
    repository: bkrepo/bkrepo-plugin-gitci
    tag: 1.0.0
    pullPolicy: IfNotPresent
    pullSecrets: []
