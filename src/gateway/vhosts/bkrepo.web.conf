# 构建机层服务分发
location ~ ^/web/([\w-_]+)/(.*)$ {
		header_filter_by_lua_file 'conf/lua/cors_filter.lua';
		auth_request /auth/web;

		# 设置auth的变量
		auth_request_set $uid $sent_http_x_bkrepo_uid;
		auth_request_set $accessToken $sent_http_x_bkrepo_access_token;
		auth_request_set $bk_token $sent_http_x_bkrepo_bk_token;
		auth_request_set $error_status $sent_http_x_devops_error_status;
		auth_request_set $error_return $sent_http_x_devops_error_return;

		set $access_type 'web';
		set $service $1;
		set $path $2;
		set $target '';

		access_by_lua_file 'conf/lua/router_srv.lua';

		proxy_set_header X-DEVOPS-UID $uid;
		proxy_set_header X-DEVOPS-BK-TOKEN $bk_token;
		proxy_set_header X-DEVOPS-BK-TICKET $bk_token;
		proxy_set_header X-DEVOPS-ACCESS-TOKEN $accessToken;
		proxy_set_header X-BKREPO-UID $uid;
		proxy_set_header X-BKREPO-BK-TOKEN $bk_token;
		proxy_set_header X-BKREPO-BK-TICKET $bk_token;
		proxy_set_header X-BKREPO-ACCESS-TOKEN $accessToken;
		proxy_set_header X-BKREPO-API-TYPE "web";

		proxy_set_header authorization "$bkrepo_authorization";

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;

		# 反向代理到目标ip，端口，路径和参数
		if ($request_uri ~* ^/web/([\w-_]+)/(.*)$) {
			proxy_pass http://$target/$2;
		}
}