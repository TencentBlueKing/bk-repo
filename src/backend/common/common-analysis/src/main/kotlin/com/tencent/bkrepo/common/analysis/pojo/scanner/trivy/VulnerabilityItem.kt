/*
 * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.
 *
 * Copyright (C) 2022 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.
 *
 * A copy of the MIT License is included in this file.
 *
 *
 * Terms of the MIT License:
 * ---------------------------------------------------
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
 * LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
 * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.tencent.bkrepo.common.analysis.pojo.scanner.trivy

import com.fasterxml.jackson.annotation.JsonAlias
import io.swagger.v3.oas.annotations.media.Schema


@Schema(title = "漏洞信息")
data class VulnerabilityItem(
    @get:Schema(title = "漏洞编号")
    @JsonAlias("VulnerabilityID")
    val vulnerabilityId: String,
    @get:Schema(title = "PkgName")
    @JsonAlias("PkgName")
    val pkgName: String = "",
    @get:Schema(title = "安装版本")
    @JsonAlias("InstalledVersion")
    val installedVersion: String = "",
    @get:Schema(title = "修复版本")
    @JsonAlias("FixedVersion")
    val fixedVersion: String = "",
    @get:Schema(title = "Layer")
    @JsonAlias("Layer")
    val layer: Layer? = null,
    @get:Schema(title = "严重来源")
    @JsonAlias("SeveritySource")
    val severitySource: String = "",
    @get:Schema(title = "PrimaryURL")
    @JsonAlias("PrimaryURL")
    val primaryUrl: String = "",
    @get:Schema(title = "PkgName")
    @JsonAlias("DataSource")
    val dataSource: DataSource? = null,
    @get:Schema(title = "Title")
    @JsonAlias("Title")
    val title: String = "",
    @get:Schema(title = "Description")
    @JsonAlias("Description")
    val description: String = "",
    @get:Schema(title = "Severity")
    @JsonAlias("Severity")
    var severity: String = "",
    @get:Schema(title = "CweIDs")
    @JsonAlias("CweIDs")
    val cweIds: List<String>? = null,
    @get:Schema(title = "CVSS")
    @JsonAlias("CVSS")
    val cvss: Map<String, CVSS>? = null,
    @get:Schema(title = "References")
    @JsonAlias("References")
    val references: List<String>? = null,
    @get:Schema(title = "PublishedDate")
    @JsonAlias("PublishedDate")
    val publishedDate: String = "",
    @get:Schema(title = "LastModifiedDate")
    @JsonAlias("LastModifiedDate")
    val lastModifiedDate: String = ""
) {
    companion object {
        const val TYPE = "VULNERABILITY_ITEM"
    }
}

@Schema(title = "Layer")
data class Layer(
    @get:Schema(title = "Digest")
    @JsonAlias("Digest")
    val digest: String = "",
    @get:Schema(title = "DiffID")
    @JsonAlias("DiffID")
    val diffId: String = ""
)

@Schema(title = "DataSource")
data class DataSource(
    @get:Schema(title = "ID")
    @JsonAlias("ID")
    val id: String = "",
    @get:Schema(title = "Name")
    @JsonAlias("Name")
    val name: String = "",
    @get:Schema(title = "URL")
    @JsonAlias("URL")
    val url: String = ""
)

@Schema(title = "CVSS")
data class CVSS(
    @get:Schema(title = "V2Vector")
    @JsonAlias("V2Vector")
    val v2Vector: String = "",
    @get:Schema(title = "V3Vector")
    @JsonAlias("V3Vector")
    val v3Vector: String = "",
    @get:Schema(title = "V2Score")
    @JsonAlias("V2Score")
    val v2Score: String = "",
    @get:Schema(title = "V3Score")
    @JsonAlias("V3Score")
    val v3Score: String = ""
)
